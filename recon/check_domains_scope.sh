#!/bin/bash

# Usage:
#   ./check_domains_scope.sh <SUBNET_LIST> <DOMAIN_FILE>
#   ./check_domains_scope.sh "10.10.0.0/24 10.20.0.0/24" domains.txt

COLOR_RST="\e[0m"
COLOR_RED_BOLD="\e[1;31m"
COLOR_GREEN_BOLD="\e[1;32m"
COLOR_YELLOW_BOLD="\e[1;33m"
COLOR_BLUE_BOLD="\e[1;34m"

DOMAINS_NOT_RESOLVED=0
DOMAINS_SCOPE_IN=0
DOMAINS_SCOPE_OUT=0

which grepcidr >/dev/null || (echo -e "${COLOR_RED_BOLD}[-] This script requires 'grepcidr'.${COLOR_RST}"; exit)

if [ $# != 2 ]
then
	echo -e "${COLOR_RED_BOLD}[-] Missing argument${COLOR_RST}"
	exit
fi

domains=$(cat $2 2>/dev/null)
if [ $? != 0 ]
then
    echo -e "${COLOR_RED_BOLD}[-] Failed to open file: $2${COLOR_RST}"
    exit
fi

echo -e "${COLOR_BLUE_BOLD}[*]${COLOR_RST} IP ranges scope: $1"
echo -e "${COLOR_BLUE_BOLD}[*]${COLOR_RST} Domains file: $2"

for d in $(echo "$domains"); 
do
	entry="$d"
	last_ip=""
	nodns=1
	for ip in $(host $d | grep "has address" | cut -d' ' -f4)
	do
		last_ip="$ip"
		entry="${entry} $ip"
		nodns=0
	done

	if [ $nodns == 0 ]
	then
		#echo "$entry"
		grepcidr "$1" <(echo $last_ip) >/dev/null
		if [ $? == 0 ]
		then
		    echo -e "${COLOR_GREEN_BOLD}[+]${COLOR_RST} $entry"
			echo $entry >> scope_in.txt
			DOMAINS_SCOPE_IN=$((DOMAINS_SCOPE_IN+1))
		else
		    echo -e "${COLOR_YELLOW_BOLD}[!]${COLOR_RST} $entry"
			echo $entry >> scope_out.txt
			DOMAINS_SCOPE_OUT=$((DOMAINS_SCOPE_OUT+1))
		fi
	else
	    echo -e "${COLOR_RED_BOLD}[-]${COLOR_RST} Failed to resolve domain '$d'."
	    DOMAINS_NOT_RESOLVED=$((DOMAINS_NOT_RESOLVED+1))
	fi
done

echo ""
echo -e "${COLOR_BLUE_BOLD}[*]${COLOR_RST} Result:"
echo -e "    > In-scope: ${COLOR_GREEN_BOLD}$DOMAINS_SCOPE_IN${COLOR_RST}"
echo -e "    > Out-of-scope: ${COLOR_YELLOW_BOLD}$DOMAINS_SCOPE_OUT${COLOR_RST}"
echo -e "    > Not resolved: ${COLOR_RED_BOLD}$DOMAINS_NOT_RESOLVED${COLOR_RST}"

