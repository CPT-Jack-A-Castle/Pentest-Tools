
import html

from src.script import Script

class Port:
    def __init__(self, xml):
        self.xml = xml
        self.portid = int(self.xml["portid"], 10)
        self.protocol = self.xml["protocol"]
        self.state = self.xml.state["state"]
        self.service = Service(self.xml)
        self.scripts = []
        for script in self.xml.find_all("script"):
            s = Script(script)
            if not "ERROR:" in s.output:
                self.scripts.append(s)
        self.commands = []

    def outmarkdown(self):
        result = ""
        if self.scripts != None and len(self.scripts) > 0:
            result += "<details>\n\t<summary>Nmap script result(s) for port %i/%s (%s)</summary>\n\t<p>\n" % (self.portid, self.protocol, self.service.name)
            for script in self.scripts:
                result += "%s\n" % (script.outmarkdown())
            result += "</p>\n</details>\n"
        return result
    
    def generatecommands(self, suggester, host):
        self.commands = suggester.getcommands(host, self)


class Service:
    def __init__(self, xml):
        self.xml = xml
        self.name = "unknown"
        self.product = "unknown"
        self.version = "unknown"
        self.info = "unknown"
        if self.xml.service is not None:
            self.name = self.xml.service["name"]
            if "tunnel" in self.xml.service.attrs.keys():
                self.name = "%s/%s" % (self.xml.service["tunnel"], self.name)
            self.product = ""
            self.version = ""
            self.info = ""
            if "product" in self.xml.service.attrs.keys():
                self.product = self.xml.service["product"]
            if "version" in self.xml.service.attrs.keys():
                self.version = self.xml.service["version"]
            if "extrainfo" in self.xml.service.attrs.keys():
                self.info = self.xml.service["extrainfo"]
    
    def __eq__(self, other):
        if isinstance(other, Service):
            return self.name == other.name
        return False 
    
    def getfullversion(self):
        result = ""
        if self.product != "":
            result += "%s" % (self.product)
        if self.version != "":
            result += " %s" % (self.version)
        if self.info != "":
            result += " (%s)" % (self.info)
        return result

