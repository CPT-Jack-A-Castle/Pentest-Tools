#!/bin/bash

# Usage:
#   ./pyweb.sh (default port is 80)
#   ./pyweb.sh 8080 (listen on port 8080)

IFS='
'

function print_url() {
    # Usage: print_url <IP> <PORT>
    echo $1 | grep ":" >/dev/null 2>&1
    if [ $? -eq 0 ]; then FLAG_IPV6=1; else FLAG_IPV6=0; fi
    echo $1 | grep -E '^(fe80::|::1|127\.|192\.168|10\.|172\.1[6789]\.|172\.2[0-9]\.|172\.3[01]\.)' >/dev/null 2>&1
    if [ $? -eq 0 ]; then FLAG_PUB=0; else FLAG_PUB=1; fi
    echo $2 | grep -E '^80$' >/dev/null 2>&1
    if [ $? -eq 0 ]; then FLAG_DISP_PORT=0; else FLAG_DISP_PORT=1; fi

    MSG="[*]"
    if [ $FLAG_PUB -eq 1 ]; then MSG="$MSG Public"; else MSG="$MSG Private"; fi
    MSG="$MSG URL: http://"
    if [ $FLAG_IPV6 -eq 1 ]; then MSG="$MSG[$1]"; else MSG="$MSG$1"; fi
    if [ $FLAG_DISP_PORT -eq 1 ]; then MSG="$MSG:$2"; fi
    MSG="$MSG/"
    echo $MSG
}

PORT="80"
if [ $# -gt 0 ];
then
    PORT=$1
fi

# If the server is accessed through NAT
PUB_IP=$(curl --connect-timeout 1 ifconfig.io 2>/dev/null)
if [ $? -eq 0 ];
then
    print_url $PUB_IP $PORT
fi


# If the server is accessed directly from the LAN
for i in $(ip a | grep inet | cut -d' ' -f6 | cut -d'/' -f1);
do
    print_url $i $PORT
done
#for i in $(ip a | grep inet | grep "192\|172\|10" | cut -d' ' -f6 | cut -d'/' -f1); do echo "http://$i:$PORT/"; done

python3 -m http.server $PORT --bind 0.0.0.0
