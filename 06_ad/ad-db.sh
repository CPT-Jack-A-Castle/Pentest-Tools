#!/bin/bash

SCRIPT_PATH=$(readlink -f "${BASH_SOURCE[0]}")
SCRIPT_DIR=$(dirname "$SCRIPT_PATH")
AD_HELPER="${SCRIPT_DIR}/ad-helper.sh"

source "$AD_HELPER" || exit
is_workspace_directory || exit

function print_usage {
    print_info "Usage:"
    print_info "  ${0} <init|get|add|del> [arg1] [arg2] ..."
}

function cmd_init {
    # Initialize the workspace DB file
    db_init || return
    # Enumerate DNS suffixes
    suffixes=$(get_dns_suffixes) || exit
    print_success "Found $(echo \"${s}\" | wc -l) DNS suffixe(s)"
    for s in $(echo "${suffixes}")
    do
        # Enumerate DCs for each domain
        print_info "Processing domain '${s}'..."
        dcs=$(get_dcs $s || continue)
        for dc in $(echo "${dcs}")
        do
            # Gather DC info and populate database
            dc_fqdn=$dc
            dc_name=$(echo "$dc" | cut -d'.' -f1 | awk '{ print toupper($0) }')
            dc_ip=$(get_host_ip_addr $dc || continue)
            print_info "DC_FQDN=${dc_fqdn} | DC_NAME=${dc_name} | DC_IP=${dc_ip}"
            db_insert "dc" "${dc_name}" "${dc_fqdn}" "${dc_ip}"

            domain_name=$(get_dc_domain "${dc_ip}")
            domain_fqdn="${s}"
            print_info "DOMAIN_NAME=${domain_name} | DOMAIN_FQDN=${domain_fqdn}"
            db_insert "dc" "${domain_name}" "${domain_fqdn}"
        done
    done
}

function cmd_get {
    if [ $# -gt 0 ]
    then
        case $1 in
        "user"|"domain"|"dc")
            db_select $*
            ;;
        *)
            print_error "Unknown object type: '${1}'"
            print_info "Usage: ${0} add <user|domain|dc>"
        esac
    else
        print_error "Missing arguments"
        print_info "Usage: ${0} add <user|domain|dc> <args...>"
    fi
}

function cmd_add {
    if [ $# -gt 0 ]
    then
        case $1 in

        "user")
            if [ $# -eq 4 ]
            then
                db_insert "user" "${2}" "${3}" "${4}" && print_success "User '${3}' successfully added to database"
            else
                print_error "Invalid number of arguments"
                print_info "Usage: add user <domain> <name> <pass|hash>"
                print_info "Example: ${0} add user CORP bob P@ssw0rd"
            fi
            ;;

        "domain")
            if [ $# -eq 3 ]
            then
                db_insert "domain" "${2}" "${3}" && print_success "Domain '${2}' successfully added to database"
            else
                print_error "Invalid number of arguments"
                print_info "Usage: add domain <domain> <fqdn>"
                print_info "Example: ${0} add domain CORP contoso.com"
            fi
            ;;

        "dc")
            if [ $# -eq 4 ]
            then
                db_insert "dc" "${2}" "${3}" "${4}" && print_success "DC '${2}' successfully added to database"
            else
                print_error "Invalid number of arguments"
                print_info "Usage: ${0} add dc <name> <fqdn> <ip>"
                print_info "${0} add dc DC01 dc01.contoso.com 10.10.10.1"
            fi
            ;;

        *)
            print_error "Unknown object type: '${1}'"
            print_info "Usage: ${0} add <user|domain|dc>"
        esac
    else
        print_error "Missing arguments"
        print_info "Usage: ${0} add <user|domain|dc> <args...>"
    fi
}

function cmd_delete {
    if [ $# -gt 0 ]
    then
        case $1 in

        "user"|"domain"|"dc")
            if [ $# -eq 2 ]
            then
                c=$(db_select "${1}" "${2}" | wc -l)
                if [ $c != 0 ]
                then
                    db_delete "${1}" "${2}" && print_success "Entry successfully deleted from database: '${2}'"
                else
                    print_error "Entry not found: '${2}'"
                fi
            else
                print_error "Invalid number of arguments"
                print_info "Usage: ${0} delete ${1} <filter>"
                print_info "Example: ${0} delete ${1} bob"
            fi
            ;;

        *)
            print_error "Unknown object type: '${1}'"
            print_info "Usage: ${0} delete <user|domain|dc>"
        esac
    else
        print_error "Missing arguments"
        print_info "Usage: ${0} add <user|domain|dc> <filter>"
    fi
}

if [ ! $# -gt 0 ]
then
    print_usage
    exit
fi

case $1 in
"init")
    cmd_init ${@:2}
    ;;
"add")
    cmd_add ${@:2}
    ;;
"get")
    cmd_get ${@:2}
    ;;
"delete")
    cmd_delete ${@:2}
    ;;
*)
    print_error "Unknown command: '${1}'"
    ;;
esac