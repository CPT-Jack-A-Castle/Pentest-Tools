
class StatsReport:
    def __init__(self, nmap_result):
        self.nmap_result = nmap_result
    
    def getnumberofhosts(self):
        return len(self.nmap_result.hosts)

    def gettotalnumberofservices(self):
        res = 0
        for h in self.nmap_result.hosts:
            res += len(h.ports)
        return res
    
    def getservicestats(self):
        result = {}
        for host in self.nmap_result.hosts:
            for port in host.ports:
                if port.service.name in result.keys():
                    result[port.service.name] += 1
                else:
                    result[port.service.name] = 1
                # print(port.service_name)
        return result
    
    def getosstats(self):
        result = { "windows" : 0, "linux": 0, "other": 0}
        for host in self.nmap_result.hosts:
            osname = host.os.lower()
            if "windows" in osname:
                result["windows"] += 1
            elif "linux" in osname:
                result["linux"] += 1
            else:
                result["other"] += 1
        return result
    
    def markdown(self):
        osstats = self.getosstats()

        result = "# Stats\n\n"

        result += "## General\n\n"
        result += "| DESCRIPTION | RESULT |\n"
        result += "| --- | --- |\n"
        result += "| Number of hosts | %i |\n" % (self.getnumberofhosts())
        result += "| Number of services | %i |\n" % (self.gettotalnumberofservices())
        for k in osstats.keys():
            result += "| Number of hosts, OS type: %s | %i |\n" % (k, osstats[k])
        result += "\n"

        result += "## Services\n\n"
        result += "| SERVICE | NUMBER |\n"
        result += "| --- | --- |\n"
        services = self.getservicestats()
        for service in services.keys():
            result += "| %s | %i |\n" % (service, services[service])
        result += "\n"
        
        return result

